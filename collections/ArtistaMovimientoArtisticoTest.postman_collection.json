{
	"info": {
		"_postman_id": "9842f62d-5fb5-485b-bba0-395f70049e4c",
		"name": "ArtistaMovimientosArtisticos Testing v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un Pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_pais\",data.id);\r",
							"tests[\"No genera error en el POST: Crear Pais\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombrePais\": \"Colombia\",\r\n    \"coordenadas\": \"xxxxx\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/paises",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"paises"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un Pais 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_pais2\",data.id);\r",
							"tests[\"No genera error en el POST: Crear Pais\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombrePais\": \"Francia\",\r\n    \"coordenadas\": \"yyyy\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/paises",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"paises"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un Artista 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_artista1\",data.id);\r",
							"tests[\"No genera error en el POST\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Leonardo\",\r\n    \"imagen\":\"https://www.ecured.cu/images/e/e0/Retratodelartistasinbarba.jpg\",\r\n    \"fechaNacimiento\":\"1900-05-05\",\r\n    \"fechaFallecimiento\":\"1976-07-08\",\r\n    \"lugarNacimiento\":{ \"id\":{{new_id_pais}} },\r\n    \"lugarFallecimiento\":{ \"id\":{{new_id_pais}} }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un Artista 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_artista2\",data.id);\r",
							"tests[\"No genera error en el POST\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Rafael\",\r\n    \"imagen\":\"https://upload.wikimedia.org/wikipedia/commons/8/88/Albrecht_D%C3%BCrer%2C_Selbstbildnis_mit_26_Jahren_%28Prado%2C_Madrid%29.jpg\",\r\n    \"fechaNacimiento\":\"1900-05-05\",\r\n    \"fechaFallecimiento\":\"1976-07-08\",\r\n    \"lugarNacimiento\":{ \"id\":{{new_id_pais}} },\r\n    \"lugarFallecimiento\":{ \"id\":{{new_id_pais}} }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un movimiento",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_movimiento1\", data.id);\r",
							"tests[\"no genera en el Post con los datos correctos\"] = responseCode.code===201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"nombre\": \"Impresionismo\",\r\n\t\"fechaApogeo\": \"2000-10-20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/movimientoartisticos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"movimientoartisticos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un movimiento 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_movimiento2\", data.id);\r",
							"tests[\"no genera en el Post con los datos correctos\"] = responseCode.code===201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"nombre\": \"Expresionismo \",\r\n\t\"fechaApogeo\": \"1905-10-20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/movimientoartisticos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"movimientoartisticos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar un Movimiento a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}/movimientos/{{new_id_movimiento1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}",
						"movimientos",
						"{{new_id_movimiento1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un libro a un autor en la aplicación. \r\n\r\nSe envía el Id del autor y el del libro a asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Agregar un Movimiento que no existe a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede asociar ya que el movimiento no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El *movimiento artistico* con el id dado no fue encontrado\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}/movimientos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}",
						"movimientos",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un libro que no existe a un autor en la aplicación. \r\n\r\nSe envía el Id del autor y el del libro a asociar en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener un Movimiento de un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el GET\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}/movimientos/{{new_id_movimiento1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}",
						"movimientos",
						"{{new_id_movimiento1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un Movimiento que no existe de un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede obtener ya que el movimiento no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El *movimiento artistico* con el id dado no fue encontrado\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}/movimientos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}",
						"movimientos",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro que no existe de un autor en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener un Movimiento no asociado a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede obtener un movimiento que no esta asociado al artista\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El movimiento no está asociado con el artista\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}/movimientos/{{new_id_movimiento2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}",
						"movimientos",
						"{{new_id_movimiento2}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro que no esta asociado a un autor en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El libro no está asociado al autor\".\r\n\r\n**Código http esperado: 412**"
			},
			"response": []
		},
		{
			"name": "Asociar Movimientos a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\":{{new_id_movimiento1}},\n    \"nombre\": \"Impresionismo\",\n\t\"fechaApogeo\": \"2000-10-20\"\n},\n{\n    \"id\":{{new_id_movimiento2}},\n\t\"nombre\": \"Expresionismo \",\n\t\"fechaApogeo\": \"1905-10-20\"\n}]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista2}}/movimientos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista2}}",
						"movimientos"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de libros un autor existente.\r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener los Movimientos de un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"tests[\"Numero movimientos del artista\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista2}}/movimientos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista2}}",
						"movimientos"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta los libros de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y el del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Asociar Movimientos que no existen a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se pueden asociar los movimientos ya que estos no existen\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El *movimiento artistico* con el id dado no fue encontrado\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"id\": 0\n}]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista2}}/movimientos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista2}}",
						"movimientos"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de libros de una editorial existente con libros que no existen. \r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrarle un Movimiento a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el DELETE\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}/movimientos/{{new_id_movimiento1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}",
						"movimientos",
						"{{new_id_movimiento1}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un libro y un autor. Se envían los ids del autor y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrarle un Movimiento 2 a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista2}}/movimientos/{{new_id_movimiento2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista2}}",
						"movimientos",
						"{{new_id_movimiento2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un libro y un autor. Se envían los ids del autor y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrarle un Movimiento 3 a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista2}}/movimientos/{{new_id_movimiento1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista2}}",
						"movimientos",
						"{{new_id_movimiento1}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un libro y un autor. Se envían los ids del autor y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrarle un Movimiento a un Artista que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el author no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El *artista* con el id dado no fue encontrado\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/0/movimientos/{{new_id_movimiento1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"0",
						"movimientos",
						"{{new_id_movimiento1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociación entre a un libro y un autor que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0/books no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un Movimiento que no existe a un Artista",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el Movimiento no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El *movimiento artistico* con el id dado no fue encontrado\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}/movimientos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}",
						"movimientos",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociación entre un libro que no existe y un autor en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar Movimiento artistico 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code===204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/movimientoartisticos/{{new_id_movimiento1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"movimientoartisticos",
						"{{new_id_movimiento1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar Movimiento artistico 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code===204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/movimientoartisticos/{{new_id_movimiento2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"movimientoartisticos",
						"{{new_id_movimiento2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un Artista 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el DELETE\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un Artista 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el DELETE\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/artistas/{{new_id_artista2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"artistas",
						"{{new_id_artista2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar el Pais 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el DELETE\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/paises/{{new_id_pais}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"paises",
						"{{new_id_pais}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar el Pais 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el DELETE\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/paises/{{new_id_pais2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"paises",
						"{{new_id_pais2}}"
					]
				}
			},
			"response": []
		}
	]
}